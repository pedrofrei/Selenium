import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;


public class DesafioCadastro {
	
	private WebDriver driver;
	private DSL dsl;
	
	@Before
	public void inicializaChrome() {
		System.setProperty("webdriver.chrome.driver","C:/Users/IBM_ADMIN/Documents/WEBDRIVER/chromedriver.exe");
		driver = new ChromeDriver();
		driver.manage().window().setSize(new Dimension(1200, 765));
		driver.get("file:///" + System.getProperty("user.dir") +  "/src/main/resources/componentes.html");
		dsl = new DSL(driver);
	}

	@After
	public void finaliza() {
		driver.quit();
	}
	
	@Test
	public void deveBuscarTextosNaPagina() {
		
		String nome = "Pedro";
		String sobrenome = "Silva Frei";
		
		/*Preenche textfield nome e checa se está conforme esperado
		dsl.escrever("elementosForm:nome", nome);
		Assert.assertEquals(nome, dsl.obterValorCampo("elementosForm:nome"));
		
		//Preenche textfield sobrenome e checa se está conforme esperado
		dsl.escrever("elementosForm:sobrenome", sobrenome);
		Assert.assertEquals(sobrenome, dsl.obterValorCampo("elementosForm:sobrenome"));
		
		//Seleciona sexo via radio button e verifica se está como esperado
		dsl.clicarRadioButton("elementosForm:sexo:0");
		Assert.assertTrue(dsl.isRadioMarcado("elementosForm:sexo:0"));
		
		//Seleciona checkbox a comida favorita e verifica se está como esperado
		dsl.clicarRadioButton("elementosForm:comidaFavorita:2");
		Assert.assertEquals("Pizza", dsl.obterValorCombo("elementosForm:comidaFavorita:2"));
		
		//Seleciona ComboBox e verifica se está como esperado
		dsl.selecionarCombo("elementosForm:escolaridade","Mestrado");
		/*WebElement elemento_escolaridade = driver.findElement(By.id("elementosForm:escolaridade"));
		Select combo = new Select(elemento_escolaridade);
		combo.selectByIndex(2);
		Assert.assertEquals("2o grau incompleto" , combo.getFirstSelectedOption();
		
		//Seleciona ComboBoxMultiplo um esporte e verifica se está como esperado
		dsl.selecionarCombo("elementosForm:esportes","Natacao");
		/*WebElement elemento_esportes = driver.findElement(By.id("elementosForm:esportes"));
		combo = new Select(elemento_esportes);
		combo.selectByVisibleText("Natacao");
		List<WebElement> allSelectedOptions = combo.getAllSelectedOptions(); //Cria uma lista com todas opções selecionadas(1)
		Assert.assertEquals(1, allSelectedOptions.size()); // Verifica se tem 3 itens selecionados
		//Clica no botão cadastrar e verifica se o resultado está como esperado
		dsl.clicarBotao("elementosForm:cadastrar");*/
		dsl.escrever("elementosForm:nome", nome);
		dsl.escrever("elementosForm:sobrenome", sobrenome);
		dsl.clicarRadioButton("elementosForm:sexo:0");
		dsl.clicarRadioButton("elementosForm:comidaFavorita:2");
		dsl.selecionarCombo("elementosForm:escolaridade","Mestrado");
		dsl.selecionarCombo("elementosForm:esportes","Natacao");
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertTrue(dsl.obterTexto("resultado").startsWith("Cadastrado!"));
		Assert.assertTrue(dsl.obterTexto("descNome").endsWith(nome));
		Assert.assertTrue(dsl.obterTexto("descSobrenome").endsWith(sobrenome));
		Assert.assertEquals("Sexo: Masculino", dsl.obterTexto("descSexo"));
		Assert.assertEquals("Comida: Pizza", dsl.obterTexto("descComida"));
		Assert.assertEquals("Escolaridade: mestrado", dsl.obterTexto("descEscolaridade"));
		Assert.assertEquals("Esportes: Natacao", dsl.obterTexto("descEsportes"));
	}
	
	@Test
	public void deveValidarNomeObrigatorio() {
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertEquals("Nome eh obrigatorio", dsl.alertaObterTextoEAceita());
	}
	
	@Test
	public void deveValidarSobrenomeObrigatorio() {
		dsl.escrever("elementosForm:nome", "Nome qualquer");
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertEquals("Sobrenome eh obrigatorio", dsl.alertaObterTextoEAceita());
	}
	
	@Test
	public void deveValidarSexoObrigatorio() {
		
		dsl.escrever("elementosForm:nome", "Nome qualquer");		
		dsl.escrever("elementosForm:sobrenome", "Sobrenome qualquer");
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertEquals("Sexo eh obrigatorio", dsl.alertaObterTextoEAceita());

	}
	
	@Test
	public void deveValidarVegetariano() {
		dsl.escrever("elementosForm:nome", "Nome qualquer");		
		dsl.escrever("elementosForm:sobrenome", "Sobrenome qualquer");
		dsl.clicarRadioButton("elementosForm:sexo:0");
		dsl.clicarCheck("elementosForm:comidaFavorita:0");
		dsl.clicarCheck("elementosForm:comidaFavorita:3");
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertEquals("Tem certeza que voce eh vegetariano?", dsl.alertaObterTextoEAceita());
	}

	
	@Test
	public void deveValidarEsportistaIndeciso() {
		
		dsl.escrever("elementosForm:nome", "Nome qualquer");		
		dsl.escrever("elementosForm:sobrenome", "Sobrenome qualquer");
		dsl.clicarRadioButton("elementosForm:sexo:0");
		dsl.clicarCheck("elementosForm:comidaFavorita:0");
		dsl.selecionarCombo("elementosForm:esportes", "Karate");
		dsl.selecionarCombo("elementosForm:esportes", "O que eh esporte");
		dsl.clicarBotao("elementosForm:cadastrar");
		Assert.assertEquals("Voce faz esporte ou nao?", dsl.alertaObterTextoEAceita());
	}
	
}
